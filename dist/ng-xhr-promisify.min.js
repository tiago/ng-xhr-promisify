/*! ng-xhr-promisify v1.1.4 | MIT License | https://github.com/tiago/ng-xhr-promisify */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("angular")):"function"==typeof define&&define.amd?define(["angular"],t):e.ngXhrPromisify=t(e.angular)}(this,function(e){"use strict";function t(e){function t(e){return e.split("\r\n").reduce(function(e,t){var n=t.indexOf(": ");if(n>0){var r=t.substring(0,n).trim().toLowerCase(),s=t.substring(n+2).trim();e[r]=s}return e},Object.create(null))}function n(e){var n=e.getAllResponseHeaders()||"",r=t(n);return function(e){return e?(e=e.toLowerCase(),e in r?r[e]:null):r}}function r(e){return"response"in e?e.response:"string"==typeof e.responseText?e.responseText:null}function s(e,t){var n=r(e);if(/application\/json/i.test(t("Content-Type"))&&"string"==typeof n)try{n=JSON.parse(n)}catch(e){n=null}return n}function a(e){var t=e.status,n=r(e),s=e.getAllResponseHeaders();if(0!==t||n||s||e.statusText||(t=-1),1223===t&&(t=204),0===t){var a="file://"===e.responseURL.slice(0,7);t=n?200:a?404:0}return t}function i(e){var t=n(e);return{headers:t,data:s(e,t),status:a(e),statusText:e.statusText||""}}function u(t){function n(){if(t.readyState===r.DONE){var e=i(t);e.status>=200&&e.status<300?s.resolve(e):s.reject(e),t.removeEventListener("readystatechange",n)}}if(!(t instanceof XMLHttpRequest))return e.reject("Invalid XMLHttpRequest object").catch(function(e){throw new TypeError(e)});var r={UNSENT:0,DONE:4},s=e.defer();return t.readyState===r.DONE||t.readyState===r.UNSENT?n():t.addEventListener("readystatechange",n),s.promise}return u}return e=e&&e.hasOwnProperty("default")?e.default:e,t.$inject=["$q"],e.module("ngXhrPromisify",["ng"]).factory("xhrPromisify",t).name});
//# sourceMappingURL=ng-xhr-promisify.min.map
